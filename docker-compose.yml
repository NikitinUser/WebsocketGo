version: '3.5'
services:
  rabbit:
    restart: always
    image: rabbitmq:3.8.2-management
    ports:
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: rabbitmq-diagnostics -q check_port_connectivity && rabbitmq-diagnostics -q node_health_check
      timeout: 10s
    networks:
      - general-network
  service-go:
    build:
      context: .
      dockerfile: ./docker/service-go/Dockerfile
      args:
        - UID=${UID}
    depends_on:
      - rabbit
    ports:
      - 6060:6060
    restart: always
    networks:
      - general-network
  local_user_service:
    build:
      context: .
      dockerfile: ./docker/local_user_service/Dockerfile
      args:
        - UID=${UID}
    ports:
      - 6070:6070
    restart: always
    networks:
      - general-network
volumes:
  postgres-sock:
  rabbitmq-data:
networks:
  general-network:
    name: general-network
    attachable: true
  local:
    external: true

